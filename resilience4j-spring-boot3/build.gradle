dependencies {
    api project(':resilience4j-spring6')
    implementation project(':resilience4j-micrometer')
    compileOnly project(':resilience4j-reactor')
    compileOnly(libraries.spring_boot3_webflux)
    compileOnly(libraries.spring_boot3_aop)
    compileOnly(libraries.spring_boot3_actuator)
    compileOnly(libraries.hibernate_validator)
    annotationProcessor(libraries.spring_boot3_config_processor)
    annotationProcessor(libraries.spring_boot3_autoconfigure_processor)

    testImplementation(libraries.spring_boot3_test)
    testImplementation(libraries.spring_boot3_aop)
    testImplementation(libraries.spring_boot3_actuator)
    testImplementation(libraries.micrometer_prometheus)
    testImplementation(libraries.spring_boot3_web)
    testImplementation project(':resilience4j-reactor')
    testImplementation project(':resilience4j-rxjava2')
    testImplementation project(':resilience4j-rxjava3')
    testImplementation(libraries.rxjava2)
    testImplementation(libraries.rxjava3)
    testImplementation(libraries.reactor)
    testImplementation(libraries.metrics)
    testImplementation(libraries.spring_boot3_actuator)
    testImplementation project(':resilience4j-micrometer')
    testImplementation(libraries.spring_cloud_openfeign_core)
    testImplementation(libraries.spring_cloud_starter_openfeign)
    testImplementation(libraries.spring_cloud_context)
    testImplementation(libraries.feign_wiremock)
    testImplementation(libraries.spring_boot3_webflux)
    testImplementation project(':resilience4j-test')
    testImplementation(project(':resilience4j-micrometer').sourceSets.test.output)
}

compileJava.dependsOn(processResources)
ext.moduleName = 'io.github.resilience4j.springboot3'
